/*!
 * @ProjectName micro-app
 * @Version 1.0.0
 * @Author lixinliang
 * @Update Fri Aug 05 2016 17:22:43 GMT+0800 (CST)
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["microApp"] = factory();
	else
		root["microApp"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var doc = document;
	var userAgent = navigator.userAgent;

	// Use to detect the browser
	var iOS = /\(i[^;]+;( U;)? CPU.+Mac OS X/;
	var Safari = /\bversion\/([0-9.]+(?: beta)?)(?: mobile(?:\/[a-z0-9]+)?)? safari\//i;
	var iPad = /ipad/i;

	// Namespace
	var microApp = doc.querySelector('script[micro-app]');
	if (!microApp) {
	    var _context;

	    // Create micro-app element
	    var _require = __webpack_require__(1);

	    var createElement = _require.createElement;
	    var show = _require.show;

	    microApp = (_context = createElement('<script micro-app>'), show).call(_context);
	}

	__webpack_require__(1);

	// if (iOS.test(userAgent)) {
	//     // Detect the browser
	//     if (Safari.test(userAgent)) {
	//         // It looks like in Safari
	//         require('./modules/main')(microApp);
	//     } else if (navigator.standalone) {
	//         // That means website running in web-app
	//         // if (location.hash.length > 1) {
	//         //     let result = {};
	//         //     location.hash.substring(1).split('&').forEach(( keyValue ) => {
	//         //         let [ key = '', value = '' ] = keyValue.split('=');
	//         //         result[key] = value;
	//         //     });
	//         //     let uri = result['redirect-uri'];
	//         //     // Make a fake splash if `default-splash` is exist
	//         //     let { createSplash } = require('./modules/create-splash');
	//         //     createSplash({
	//         //         image : result['default-splash'],
	//         //         css : require('./style_modules/default-splash.scss'),
	//         //     });
	//         //     createSplash({
	//         //         image : result['landscape-splash'],
	//         //         css : require('./style_modules/landscape-splash.scss'),
	//         //     });
	//         //     if (uri) {
	//         //         // This website just is a router, then I will redirect to the target page
	//         //         microApp.redirect = () => {
	//         //             // The router page will not be saved in session history by `location.replace`
	//         //             location.replace(decodeURIComponent(uri));
	//         //         };
	//         //         // Before redirect, dispatchEvent on `window`
	//         //         let redirectEvent = doc.createEvent('CustomEvent');
	//         //         redirectEvent.initEvent('redirect', false, true);
	//         //         // Delay depend `duration`
	//         //         if (result.duration === void 0) {
	//         //             // Redirect right now when `duration` is not exist
	//         //             if (window.dispatchEvent(redirectEvent)) {
	//         //                 microApp.redirect();
	//         //             }
	//         //             // Stop redirecting by `event.preventDefault()`
	//         //         } else {
	//         //             setTimeout(() => {
	//         //                 if (window.dispatchEvent(redirectEvent)) {
	//         //                     microApp.redirect();
	//         //                 }
	//         //             }, result.duration);
	//         //         }
	//         //     } else {
	//         //         if (result.duration !== void 0) {
	//         //             let element = document.documentElement;
	//         //             let attribute = 'micro-splash';
	//         //             let splashEvent = doc.createEvent('CustomEvent');
	//         //             splashEvent.initEvent('splashhide', false, true);
	//         //             setTimeout(() => {
	//         //                 window.dispatchEvent(splashEvent);
	//         //                 element.setAttribute(attribute, '');
	//         //                 setTimeout(() => {
	//         //                     element.removeAttribute(attribute);
	//         //                 }, 600);
	//         //             }, result.duration);
	//         //         }
	//         //         // If `duration` is not exist, splash should be closed manually
	//         //     }
	//         // }
	//     } else {
	//         // Open in other browser
	//         require('./modules/compatible')(microApp);
	//     }
	// } else {
	//     require('./modules/compatible')(microApp);
	// }
	//
	module.exports = microApp;

	// add to home screen 的缓存(app-store)

	// 体验优化
	// 1. 用户安装时触发的事件
	// 2. 增加删除描述文案
	// 3. 提供原生交互
	// 3.1 应用的3Dtouch快捷方式
	// 3.2 消息推送
	// 3.3 应用进入后台事件(Home键)
	// 3.4 应用返回前台事件
	// 4. 无法解决icon等信息的动态修改与缓存

	// 不能用解构 避免打包不必要的代码
	// 新增loader 模块化 使用文件夹

	// window.matchMedia

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	//---------- ./_variable.js.js ----------
	var doc = document;
	var head = doc.head;
	//---------- ./autosize.js.js ----------
	//---------- ./camel2hyphen.js.js ----------
	exports.camel2hyphen = function (string) {
	    return string.replace(/[A-Z]/g, function (match) {
	        return '-' + match.toLowerCase();
	    });
	};
	//---------- ./compatible.js.js ----------
	module.exports = function (microApp) {
	    // A fallback of micro-app
	    ['filters'].forEach(function (methodName) {
	        microApp[methodName] = function () {
	            console.warn('micro-app: "' + methodName + '" is an empty function if this browser is not Safari or website is opened in standalone mode.');
	            return this;
	        };
	    });
	};
	//---------- ./create-element.js.js ----------
	var container = doc.createElement('div');

	exports.createElement = function (html) {
	    container.innerHTML = html;
	    return container.firstElementChild;
	};
	//---------- ./define-static-property.js.js ----------
	exports.defineStaticProperty = function (name, value) {
	    Object.defineProperty(this, name, {
	        value: value,
	        writable: false,
	        enumerable: false,
	        configurable: false
	    });
	    return this;
	};
	//---------- ./filters.js.js ----------
	exports.filters = {};
	//---------- ./hide.js.js ----------
	exports.hide = function () {
	    head.removeChild(this);
	    return this;
	};
	//---------- ./location-hash.js.js ----------
	var hashObject = {};

	function update() {
	    var result = [];
	    for (var key in hashObject) {
	        var value = hashObject[key];
	        if (value !== null) {
	            result.push(key + '=' + value);
	        }
	    }
	    var hash = location.hash;
	    result = result.join('&');
	    if (hash !== result) {
	        location.hash = result;
	    }
	}

	module.exports = {
	    add: function add(key, value) {
	        hashObject[key] = value;
	        update();
	    },
	    remove: function remove(key) {
	        var value = hashObject[key];
	        if (value === null || value === void 0) {
	            return;
	        }
	        hashObject[key] = null;
	        update();
	    }
	};
	//---------- ./not-a-function.js.js ----------
	exports.NAF = function (value) {
	    return typeof value == 'function' ? NAF(value()) : value;
	};
	//---------- ./on-hash-change-handler.js.js ----------
	var keys = ['redirect-uri', 'default-splash', 'landscape-splash'];

	exports.onHashChangeHandler = function (uri) {
	    var position = uri.indexOf('#');
	    if (position > -1 && position < uri.length - 1) {
	        var content = uri.substring(position + 1);
	        var expression = new RegExp('(^|&)(' + keys.join('|') + ')=');
	        if (!expression.test(content)) {
	            console.warn('micro-app: "location.hash" is in use to save the params.');
	        }
	    }
	};
	//---------- ./parse-argument.js.js ----------
	exports.parseArgument = function (expression) {
	    var left = /\(/.test(expression);
	    var right = /\)/.test(expression);
	    if (left || right) {
	        try {
	            if (!left) {
	                throw new SyntaxError('[micro-app] Missing "(" before argument list.');
	            }
	            if (!right) {
	                throw new SyntaxError('[micro-app] Missing ")" after argument list.');
	            }
	            if (!/\)$/.test(expression)) {
	                throw new SyntaxError('[micro-app] Unexpected end of "' + expression.match(/.*(\).*$)/)[1] + '".');
	            }

	            var _expression$match = expression.match(/(.*?)\((.*)\)$/);

	            var _expression$match2 = _slicedToArray(_expression$match, 3);

	            var methodName = _expression$match2[1];
	            var methodArgument = _expression$match2[2];

	            return [methodName, JSON.parse('[' + methodArgument + ']')];
	        } catch (e) {
	            // Function will be stoped cause throw an error sync
	            setTimeout(function () {
	                throw e;
	            }, 0);
	            return [''];
	        }
	    } else {
	        return [expression, []];
	    }
	};
	//---------- ./parse-filters.js.js ----------
	exports.parseFilters = function (expression) {
	    var globalFilters = this.globalFilters;
	    if (globalFilters !== void 0) {
	        if (typeof globalFilters == 'string') {
	            return [globalFilters].concat(expression.substring(1).split('|'));
	        }
	        if (globalFilters instanceof Array) {
	            var _ret = function () {
	                var result = [];
	                var tips = false;
	                globalFilters.forEach(function (filter) {
	                    if (typeof filter == 'string') {
	                        result.push(filter);
	                    } else {
	                        if (!tips) {
	                            console.warn('micro-app: All members in globalFilters will be ignored except String.');
	                            tips = true;
	                        }
	                    }
	                });
	                return {
	                    v: result.concat(expression.substring(1).split('|'))
	                };
	            }();

	            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	        }
	        console.warn('micro-app: globalFilters must be String or an array of String.');
	    }
	    return expression ? expression.substring(1).split('|') : [];
	};
	//---------- ./parse-url.js.js ----------
	exports.parseUrl = function (url) {
	    var a = doc.createElement('a');
	    a.href = url;
	    return a;
	};
	//---------- ./set-attribute.js.js ----------
	var proto = Element.prototype;

	exports.setAttribute = function (attribute, value) {
	    if (value === null) {
	        proto.removeAttribute.call(this, attribute);
	    } else {
	        proto.setAttribute.call(this, attribute, value);
	    }
	    return this;
	};
	//---------- ./show.js.js ----------
	exports.show = function () {
	    head.appendChild(this);
	    return this;
	};
	//---------- ./storage.js.js ----------
	exports.saveData = function (key, value) {
	    localStorage.setItem('micro-app:' + key, typeof value == 'string' ? value : JSON.stringify(value));
	};

	exports.loadData = function (key) {
	    return localStorage.getItem('micro-app:' + key);
	};

/***/ }
/******/ ])
});
;